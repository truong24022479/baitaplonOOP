package org.example.demo;

import com.almasb.fxgl.dsl.FXGL;
import com.almasb.fxgl.entity.Entity;
/// /////phong

public class Bomb {
    private int x, y; // T·ªça ƒë·ªô bom
    private int timer; // Th·ªùi gian ƒë·∫øm ng∆∞·ª£c (gi√¢y)
    private int explosionRadius; // B√°n k√≠nh n·ªï
    private boolean isExploded; // Tr·∫°ng th√°i bom
    private Entity owner; // Ng∆∞·ªùi ƒë·∫∑t bom
    private int[][] map; // Tham chi·∫øu t·ªõi b·∫£n ƒë·ªì

    public Bomb(int x, int y, int timer, int explosionRadius, Entity owner, int[][] map) {
        this.x = x;
        this.y = y;
        this.timer = timer;
        this.explosionRadius = explosionRadius;
        this.isExploded = false;
        this.owner = owner;
        this.map = map; // L∆∞u tham chi·∫øu t·ªõi b·∫£n ƒë·ªì
    }

    // K√≠ch ho·∫°t bom v·ªõi c∆° ch·∫ø ƒë·∫øm ng∆∞·ª£c
    public void activate() {
        new Thread(() -> {
            try {
                Thread.sleep(timer * 1000); // ƒê·∫øm ng∆∞·ª£c theo gi√¢y
                javafx.application.Platform.runLater(() -> {
                    explode(); // G·ªçi ph∆∞∆°ng th·ª©c ph√°t n·ªï
                });
            } catch (InterruptedException e) {
                Thread.currentThread().interrupt();
                System.err.println("Lu·ªìng b·ªã gi√°n ƒëo·∫°n: " + e.getMessage());
            }
        }).start();
    }

    // Ph∆∞∆°ng th·ª©c ph√°t n·ªï
    private void explode() {
        isExploded = true;
        System.out.println("Bom ph√°t n·ªï t·∫°i: " + x + ", " + y);
        affectSurrounding(); // G√¢y ·∫£nh h∆∞·ªüng ƒë·∫øn xung quanh
    }

    // X·ª≠ l√Ω c√°c ƒë·ªëi t∆∞·ª£ng trong ph·∫°m vi n·ªï
    private void affectSurrounding() {
        for (int dx = -explosionRadius; dx <= explosionRadius; dx++) {
            for (int dy = -explosionRadius; dy <= explosionRadius; dy++) {
                int nx = x + dx;
                int ny = y + dy;
/// /////////////
                // Ki·ªÉm tra trong ph·∫°m vi b·∫£n ƒë·ªì
                if (nx >= 0 && nx < map[0].length && ny >= 0 && ny < map.length) {
                    if (map[ny][nx] == 1) {
                        System.out.println("Ph√° h·ªßy t∆∞·ªùng t·∫°i: " + nx + ", " + ny);
                        map[ny][nx] = 0; // Lo·∫°i b·ªè t∆∞·ªùng
                    } else if (map[ny][nx] == 2) {
                        System.out.println("Ph√° h·ªßy g·∫°ch t·∫°i: " + nx + ", " + ny);
                        map[ny][nx] = 0; // Lo·∫°i b·ªè g·∫°ch
                    }

                    FXGL.getGameWorld().getEntitiesByType(EntityType.ENEMY).forEach(enemy -> {
                        int ex = (int) (enemy.getX() / Enemy.TILE_SIZE);
                        int ey = (int) (enemy.getY() / Enemy.TILE_SIZE);

                        if (ex == nx && ey == ny) {
                            if (enemy.hasComponent(Balloon.class)) {
                                enemy.getComponent(Balloon.class).removeEnemy();
                                System.out.println("Kill Balloon");
                            } else if (enemy.hasComponent(Oneal.class)) {
                                enemy.getComponent(Oneal.class).removeEnemy();
                                System.out.println("Kill Oneal");
                            }
                        }
                    });
                }
            }
        }
    }

    // Getter ƒë·ªÉ ki·ªÉm tra tr·∫°ng th√°i bom
    public boolean isExploded() {
        return isExploded;
    }

    public static void setBomb(Entity player, int[][] map, int explosionRadius, int timer) {
        int tileX = (int) (player.getX() / 32);
        int tileY = (int) (player.getY() / 32);

        // ƒê·∫∑t bom t·∫°i tile hi·ªán t·∫°i c·ªßa player
        Bomb bomb = new Bomb(tileX, tileY, timer, explosionRadius, player, map);
        bomb.activate(); // B·∫Øt ƒë·∫ßu ƒë·∫øm ng∆∞·ª£c v√† n·ªï

        System.out.println("üî• Bom ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t t·∫°i: " + tileX + ", " + tileY);
    }

}